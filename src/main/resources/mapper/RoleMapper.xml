<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo12.mapper.RoleMapper">

    <resultMap id="BaseResultMap" type="com.example.demo12.domain.Role">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="role" column="role" jdbcType="CHAR"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="createAt" column="create_at" jdbcType="TIMESTAMP"/>
            <result property="updateAt" column="update_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,role,status,
        create_at,update_at
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from role
        where  id = #{id,jdbcType=INTEGER} 
    </select>

    <select id="selectRoleListByUserId" resultMap="BaseResultMap">
        SELECT role.* FROM role INNER JOIN user_role ON role.id = user_role.role_id WHERE user_role.user_id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from role
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.demo12.domain.Role" useGeneratedKeys="true">
        insert into role
        ( id,role,status
        ,create_at,update_at)
        values (#{id,jdbcType=INTEGER},#{role,jdbcType=CHAR},#{status,jdbcType=TINYINT}
        ,#{createAt,jdbcType=TIMESTAMP},#{updateAt,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.demo12.domain.Role" useGeneratedKeys="true">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="role != null">role,</if>
                <if test="status != null">status,</if>
                <if test="createAt != null">create_at,</if>
                <if test="updateAt != null">update_at,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="role != null">#{role,jdbcType=CHAR},</if>
                <if test="status != null">#{status,jdbcType=TINYINT},</if>
                <if test="createAt != null">#{createAt,jdbcType=TIMESTAMP},</if>
                <if test="updateAt != null">#{updateAt,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo12.domain.Role">
        update role
        <set>
                <if test="role != null">
                    role = #{role,jdbcType=CHAR},
                </if>
                <if test="status != null">
                    status = #{status,jdbcType=TINYINT},
                </if>
                <if test="createAt != null">
                    create_at = #{createAt,jdbcType=TIMESTAMP},
                </if>
                <if test="updateAt != null">
                    update_at = #{updateAt,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo12.domain.Role">
        update role
        set 
            role =  #{role,jdbcType=CHAR},
            status =  #{status,jdbcType=TINYINT},
            create_at =  #{createAt,jdbcType=TIMESTAMP},
            update_at =  #{updateAt,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=INTEGER} 
    </update>



</mapper>
