<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo12.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.example.demo12.domain.User">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="user" column="user" jdbcType="CHAR"/>
            <result property="pwd" column="pwd" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="createAt" column="create_at" jdbcType="TIMESTAMP"/>
            <result property="updateAt" column="update_at" jdbcType="TIMESTAMP"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
    </resultMap>


    <resultMap id="BaseResultMapSyS" type="com.example.demo12.domain.SysUserInfo">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="userid" column="userid" jdbcType="INTEGER"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="avatarUrl" column="avatar_url" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="describe" column="describe" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="auth" column="auth" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,user,pwd,
        email,create_at,update_at,
        status
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where  id = #{id,jdbcType=INTEGER} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert  id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.demo12.domain.User" useGeneratedKeys="true">
        insert into user
        ( id,user,pwd
        ,email,create_at,update_at
        ,status)
        values (#{id,jdbcType=INTEGER},#{user,jdbcType=CHAR},#{pwd,jdbcType=VARCHAR}
        ,#{email,jdbcType=VARCHAR},#{createAt,jdbcType=TIMESTAMP},#{updateAt,jdbcType=TIMESTAMP}
        ,#{status,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.demo12.domain.User" useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="user != null">user,</if>
                <if test="pwd != null">pwd,</if>
                <if test="email != null">email,</if>
                <if test="createAt != null">create_at,</if>
                <if test="updateAt != null">update_at,</if>
                <if test="status != null">status,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="user != null">#{user,jdbcType=CHAR},</if>
                <if test="pwd != null">#{pwd,jdbcType=VARCHAR},</if>
                <if test="email != null">#{email,jdbcType=VARCHAR},</if>
                <if test="createAt != null">#{createAt,jdbcType=TIMESTAMP},</if>
                <if test="updateAt != null">#{updateAt,jdbcType=TIMESTAMP},</if>
                <if test="status != null">#{status,jdbcType=TINYINT},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo12.domain.User">
        update user
        <set>
                <if test="user != null">
                    user = #{user,jdbcType=CHAR},
                </if>
                <if test="pwd != null">
                    pwd = #{pwd,jdbcType=VARCHAR},
                </if>
                <if test="email != null">
                    email = #{email,jdbcType=VARCHAR},
                </if>
                <if test="createAt != null">
                    create_at = #{createAt,jdbcType=TIMESTAMP},
                </if>
                <if test="updateAt != null">
                    update_at = #{updateAt,jdbcType=TIMESTAMP},
                </if>
                <if test="status != null">
                    status = #{status,jdbcType=TINYINT},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo12.domain.User">
        update user
        set 
            user =  #{user,jdbcType=CHAR},
            pwd =  #{pwd,jdbcType=VARCHAR},
            email =  #{email,jdbcType=VARCHAR},
            create_at =  #{createAt,jdbcType=TIMESTAMP},
            update_at =  #{updateAt,jdbcType=TIMESTAMP},
            status =  #{status,jdbcType=TINYINT}
        where   id = #{id,jdbcType=INTEGER} 
    </update>


    <select id="selectAllByEmailOrUserOrUser" resultMap="BaseResultMap">
        select * from user where user = #{username} or  email = #{username}
    </select>


    <select id="searchAllById" resultMap="BaseResultMapSyS">
        SELECT user_info.*,role.role,GROUP_CONCAT(authority.`describe`) as `auth` FROM `user` as u INNER JOIN user_info ON user_info.userid = u.id LEFT JOIN  user_role on user_role.user_id = u.id LEFT JOIN role on role.id = user_role.role_id LEFT JOIN role_authority ON role_authority.role_id = role.id LEFT JOIN authority ON authority.id = role_authority.authority_id WHERE u.id = #{id}  GROUP BY user_id
    </select>
</mapper>
